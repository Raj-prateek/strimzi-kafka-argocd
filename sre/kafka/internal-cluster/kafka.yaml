apiVersion: v1
kind: Namespace
metadata:
  name: kafka
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: gke-offshore-asia-south1-kafka-cluster
  namespace: kafka
spec:
  kafka:
    version: 3.4.0
    replicas: 3
    logging:
      type: external
      valueFrom:
        configMapKeyRef:
          name: configmap-log4j
          key: kafka-log4j.properties
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.4"
    storage:
      type: jbod
      volumes:
        - id: 0
          type: persistent-claim
          size: 100Gi
          deleteClaim: false
          class: standard-rwo
        - id: 1
          type: persistent-claim
          size: 50Gi
          deleteClaim: false
          class: standard-rwo
    rack:
      topologyKey: topology.kubernetes.io/zone
  zookeeper:
    replicas: 3
    storage:
      type: persistent-claim
      size: 100Gi
      deleteClaim: false
      class: premium-rwo
    template:
      pod:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: strimzi.io/name
                      operator: In
                      values:
                        - gke-offshore-asia-south1-kafka-cluster-zookeeper
                topologyKey: "kubernetes.io/hostname"
  entityOperator:
    topicOperator: {}
    userOperator: {}
